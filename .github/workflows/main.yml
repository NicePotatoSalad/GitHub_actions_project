name: Pipeline

on:
  push:
    branches:
      - advanced_pipeline_implem
  pull_request:
    branches:
      - advanced_pipeline_implem

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build application 
        run: echo "Simulating application build..." && mkdir -p build && echo "App version 1.0.0" > build/my_app_info.txt
      - name: Upload application build artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-build
          path: build/

  api_and_unit_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Unit Tests
        run: pytest tests/unit/ --junitxml=reports/unit_results.xml
      - name: Run API Tests
        run: pytest tests/api/ --junitxml=reports/api_results.xml
      - name: Upload Unit/API Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-api-test-reports
          path: reports/
          if-no-files-found: ignore
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build, api_and_unit_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Deploy to staging environment
        run: echo Deploy to staging environment
      - name: Upload application build artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-build
          path: build/


  E2E_tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run E2E Tests
        run: pytest tests/ui/ --junitxml=reports/ui_results.xml
      - name: Upload E2E Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: e2e-reports
          path: reports/
          if-no-files-found: ignore
      

  publish_report:
    runs-on: ubuntu-latest
    needs: [api_and_unit_tests, E2E_tests]
    if: always()
    steps:
      # - name: Download Unit/API Test Reports
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: unit-api-test-reports
      #     path: downloaded_reports/unit-api/
          
      # - name: Download E2E Test Reports
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: e2e-test-reports-* # Попытка скачать по маске (не всегда работает с download-artifact напрямую)
      #     path: downloaded_reports/e2e/
      
      - name: Generate Allure Report
        run: |
          echo "Generating comprehensive Allure report..."
          ls -R downloaded_reports/

      - name: Upload Allure Report (as artifact for Browse)
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report
          path: allure-report/

      - name: Send Slack Notification
        run: echo "Sending Slack notification about pipeline status."